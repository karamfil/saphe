# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
# on-focus-changed = ['move-mouse window-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 1
inner.vertical = 1
outer.left = 0
outer.bottom = 0
outer.top = 0
outer.right = 0

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# You can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-shift-slash = 'layout tiles horizontal vertical'
alt-shift-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors left'
alt-j = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors down'
alt-k = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors up'
alt-l = 'focus --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors right'

alt-cmd-j = 'focus-monitor up'
alt-cmd-k = 'focus-monitor down'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = ['workspace 1u', 'workspace 1m']
alt-2 = ['workspace 2u', 'workspace 2m']
alt-3 = ['workspace 3u', 'workspace 3m']
alt-4 = ['workspace 4u', 'workspace 4m']
alt-5 = ['workspace 5u', 'workspace 5m']
alt-6 = ['workspace 6u', 'workspace 6m']
alt-7 = ['workspace 7u', 'workspace 7m']
alt-8 = ['workspace 8u', 'workspace 8m']
alt-9 = ['workspace 9u', 'workspace 9m']
alt-0 = ['workspace 0u', 'workspace 0m']
alt-a = 'workspace A'
alt-b = 'workspace B'
alt-c = 'workspace C'
alt-e = 'workspace E'
alt-f = 'workspace F'
alt-g = 'workspace G'
alt-i = 'workspace I'
alt-n = 'workspace N'
alt-o = 'workspace O'
alt-p = 'workspace P'
alt-q = 'workspace Q'
alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
alt-u = 'workspace U'
alt-w = 'workspace W'
alt-x = 'workspace X'
alt-y = 'workspace Y'
alt-z = 'workspace Z'

alt-tab = 'move-node-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

alt-m = 'mode move'
# alt-r = 'mode resize'


[workspace-to-monitor-force-assignment]
1m = 'main'
2m = 'main'
3m = 'main'
4m = 'main'
5m = 'main'
6m = 'main'
7m = 'main'
8m = 'main'
9m = 'main'
0m = 'main'
1u = ['dell', 'secondary']
2u = ['dell', 'secondary']
3u = ['dell', 'secondary']
4u = ['dell', 'secondary']
5u = ['dell', 'secondary']
6u = ['dell', 'secondary']
7u = ['dell', 'secondary']
8u = ['dell', 'secondary']
9u = ['dell', 'secondary']
0u = ['dell', 'secondary']

[mode.move.binding]
esc = ['mode main']
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-1 = ['move-node-to-workspace 1m', 'mode main']
alt-2 = ['move-node-to-workspace 2m', 'mode main']
alt-3 = ['move-node-to-workspace 3m', 'mode main']
alt-4 = ['move-node-to-workspace 4m', 'mode main']
alt-5 = ['move-node-to-workspace 5m', 'mode main']
alt-6 = ['move-node-to-workspace 6m', 'mode main']
alt-7 = ['move-node-to-workspace 7m', 'mode main']
alt-8 = ['move-node-to-workspace 8m', 'mode main']
alt-9 = ['move-node-to-workspace 9m', 'mode main']
alt-0 = ['move-node-to-workspace 0m', 'mode main']
alt-shift-1 = ['move-node-to-workspace 1u', 'mode main']
alt-shift-2 = ['move-node-to-workspace 2u', 'mode main']
alt-shift-3 = ['move-node-to-workspace 3u', 'mode main']
alt-shift-4 = ['move-node-to-workspace 4u', 'mode main']
alt-shift-5 = ['move-node-to-workspace 5u', 'mode main']
alt-shift-6 = ['move-node-to-workspace 6u', 'mode main']
alt-shift-7 = ['move-node-to-workspace 7u', 'mode main']
alt-shift-8 = ['move-node-to-workspace 8u', 'mode main']
alt-shift-9 = ['move-node-to-workspace 9u', 'mode main']
alt-shift-0 = ['move-node-to-workspace 0u', 'mode main']
alt-a = ['move-node-to-workspace A', 'mode main']
alt-b = ['move-node-to-workspace B', 'mode main']
alt-c = ['move-node-to-workspace C', 'mode main']
alt-e = ['move-node-to-workspace E', 'mode main']
alt-f = ['move-node-to-workspace F', 'mode main']
alt-g = ['move-node-to-workspace G', 'mode main']
alt-i = ['move-node-to-workspace I', 'mode main']
alt-n = ['move-node-to-workspace N', 'mode main']
alt-o = ['move-node-to-workspace O', 'mode main']
alt-p = ['move-node-to-workspace P', 'mode main']
alt-q = ['move-node-to-workspace Q', 'mode main']
alt-r = ['move-node-to-workspace R', 'mode main']
alt-s = ['move-node-to-workspace S', 'mode main']
alt-t = ['move-node-to-workspace T', 'mode main']
alt-u = ['move-node-to-workspace U', 'mode main']
alt-w = ['move-node-to-workspace W', 'mode main']
alt-x = ['move-node-to-workspace X', 'mode main']
alt-y = ['move-node-to-workspace Y', 'mode main']
alt-z = ['move-node-to-workspace Z', 'mode main']

alt-tab = ['move-workspace-to-monitor --wrap-around next', 'mode main']


[mode.resize.binding]
esc = ['mode main']

# 'service' binding mode declaration.Ãš
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
	'layout floating tiling',
	'mode main',
] # Toggle between floating and tiling layout
# backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']


# [[on-window-detected]]
# if.app-id = 'com.apple.systempreferences'
# if.app-name-regex-substring = 'settings'
# if.window-title-regex-substring = 'substring'
# if.workspace = 'workspace-name'
# if.during-aerospace-startup = true
# check-further-callbacks = true
# run = ['layout floating', 'move-node-to-workspace S']
# run = ['move-node-to-workspace S']


[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.during-aerospace-startup = true
run = ['move-node-to-workspace 1m']

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
if.during-aerospace-startup = true
run = ['move-node-to-workspace 2m']

[[on-window-detected]]
if.app-id = 'com.azuredatastudio.oss'
run = ['move-node-to-workspace 3u']

[[on-window-detected]]
if.app-id = 'org.jkiss.dbeaver.core.product'
run = ['move-node-to-workspace 3m']

[[on-window-detected]]
if.app-id = 'org.mozilla.firefox'
run = ['move-node-to-workspace 4u']

[[on-window-detected]]
if.app-id = 'com.apple.SafariTechnologyPreview'
run = ['move-node-to-workspace 4m']

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = ['move-node-to-workspace 7m']

[[on-window-detected]]
if.app-id = 'com.facebook.archon'
run = ['move-node-to-workspace 7m']

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = ['move-node-to-workspace 8m']

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace 0m']

[[on-window-detected]]
if.app-id = 'com.flexibits.fantastical2.mac'
run = ['move-node-to-workspace C']

[[on-window-detected]]
if.app-id = 'com.google.Chrome.app.dcllmfmjlkpljanfegjgohmlnfipachj'
run = ['move-node-to-workspace R']

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace R']

[[on-window-detected]]
if.app-id = 'com.microsoft.Excel'
if.during-aerospace-startup = true
run = ['move-node-to-workspace X']


# Always Floating
[[on-window-detected]]
if.app-id = 'com.bjango.istatmenus.status'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.bjango.istatmenus'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

# [[on-window-detected]]
# if.app-id = '85C27NK92C.com.flexibits.fantastical2.mac.helper'
# run = ['layout floating']
